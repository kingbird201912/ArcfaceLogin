//apply plugin: 'com.android.application'
//该成library 2020-12-14
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
// 依赖厂库
apply plugin: 'com.github.dcendents.android-maven'

group = 'com.github.jitpack'
version = '1.0.7'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 1
        versionName version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    repositories {
        flatDir { dirs 'libs' }
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.21"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //日志工具
    implementation 'com.orhanobut:logger:2.2.0'
    // 腾讯云人脸识别
    implementation 'com.tencentcloudapi:tencentcloud-sdk-java:4.0.11'
    //腾讯 "org.apache.xerces.jaxp.datatype.DatatypeFactoryImpl" 错误
    implementation group: 'xerces', name: 'xercesImpl', version: '2.12.0'

}

// 以下是jar配置

task clearJar() {
    delete 'build/libs/connect.jar' //删除已经存在的jar包，如果有的话
}


task makeJar(type: Copy) {
    from('build/intermediates/aar_main_jar/release/classes.jar')//从该目录下加载要打包的文件，注意文件夹名称有可能为default，也可能是release，自己看一下
    into('build/libs/')//jar包的保存目录
    include('classes.jar')//设置过滤，只打包classes文件
    rename('classes.jar', 'connect.jar')//重命名，SlidingMenuHbh.jar 名字自己随便起
}

makeJar.dependsOn(clearJar,build)
